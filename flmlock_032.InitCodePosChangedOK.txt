/*

初始化进度，移空ID, 调换钥匙位置成功！
（下个目标，用码表进行开锁）

*/

// 源码

/*
  Source for cloud chess board version ccb_020.1.chessidlong.txt
  Starting form reading the module info correctly.
*/

// disable the printTmpcodes(); 6 36 0 5A 88 D4      6 54 0 90 136 212

long lCodeTab[9];
void initCodeTab( void )
{
  for ( int i=0; i<9; i++ )
    lCodeTab[i] = -9;
}
void setCodeTab( int i, long c )
{
  if ( c > 0 )
  if ( i>0 && i<=9 )
    lCodeTab[i-1] = c;
}
int isCodeTabInit( void )
{
  for ( int i=0; i<9; i++ )
    if ( lCodeTab[i] <= 0 ) return 0;
  return 1;
}
int isCodeTabInitPercent( void )
{
  int i, per=0;
  for ( i=0; i<9; i++ )
    if ( lCodeTab[i] > 0 ) per ++;
  return per;
}
int idxOfCode( long c )
{
  for ( int i=0; i<9; i++ )
    if ( lCodeTab[i] == c ) return i+1;
  return -1;
}
void printCodeIdx( long c )
{
  int i = idxOfCode( c );
  if ( i <= 0 ) return;
  Serial.print( "printCodeIdx: " );
  Serial.print( c );
  Serial.print( " = " );
  Serial.println( i );
}
void printCodeIdxPos( int p, long c )
{
  int i = idxOfCode( c );
  if ( c == 0 )
  {
    Serial.print( "(p" );
    Serial.print( p );
    Serial.println( " = 0);" );
  } 
  if ( i <= 0 ) return;
  if ( p>0 && p<=9 )
  { /*
    Serial.print( "printCodeIdxPos: " );
    Serial.print( c );
    Serial.print( " = " );
    Serial.print( i );
    Serial.print( ";      " );*/
    Serial.print( "(" );
    Serial.print( p );
    Serial.print( " = " );
    Serial.print( i );
    Serial.println( ");" );
  }
}

/*
  Character analysis operators 
 
 Examples using the character analysis operators.
 Send any byte and the sketch will tell you about it.
 
 created 29 Nov 2010
 modified 2 Apr 2012
 by Tom Igoe
 
 This example code is in the public domain.
 */
long lTimer = 0;
unsigned char tmpcodes[10];
int tmpcodesptr=0;

void printCmd( int pos, int code, long id ) {
  Serial.print( "printCmd(p,c,id);   " );
  Serial.print( pos );
  Serial.print( ", " );
  Serial.print( code );
  Serial.print( ", (" );
  Serial.print( id, HEX );
  Serial.print( ")" );
  Serial.println( id );
}

void command( int pos, int code, long id ) {
  // printCmd( pos, code, id );
  // code 2 idx init.
  if ( !isCodeTabInit() )
  {
    setCodeTab( pos, id );
    code = isCodeTabInitPercent();
    Serial.print( "!(" );
    Serial.print( code );
    Serial.print( "/9)p" );
    Serial.println( pos );
  } else
    // printCodeIdx( id );
    printCodeIdxPos( pos, id );
}

void TmpCodes2cmd() {
  unsigned char b[4];
  b[0] = tmpcodes[2+3];
  b[1] = tmpcodes[2+2];
  b[2] = tmpcodes[2+1];
  b[3] = tmpcodes[2];
  long l = *(long*)(b);
  command( tmpcodes[0], tmpcodes[1], l );
}

void printTmpCodes() {
  if ( tmpcodesptr > 0 )
  for ( int i=0; i<tmpcodesptr; i++ )
  {
    Serial.write( ' ' ); 
    Serial.print(tmpcodes[i]);
  }
}

void printTmpCodesHex() {
  if ( tmpcodesptr > 0 )
  for ( int i=0; i<tmpcodesptr; i++ )
  {
    Serial.write( ' ' ); 
    Serial.print(tmpcodes[i],HEX);
  }
}

void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
  lTimer = 0;
  tmpcodesptr = 0;
  
  // self init...
  initCodeTab();
  
  // send an intro:
  Serial.println("send any byte and I'll tell you everything I can about it");
  Serial.println();
}

void loop() {
  // get any incoming bytes:
  if (Serial.available() > 0) {
    int thisChar = Serial.read();
    
    // recording the codes.
    if ( tmpcodesptr < 10 )
    {
      tmpcodes[tmpcodesptr] = thisChar;
      tmpcodesptr += 1;
    }
    // reset timer.
    lTimer = 0;
  }
  if ( lTimer > 2000 && tmpcodesptr > 0 )
  { /* print the buffer.
    Serial.print( "printTmpcodes();   " );
    printTmpCodesHex();
    Serial.print( "        " );
    printTmpCodes();
    Serial.println(""); */
    // code 2 command.
    TmpCodes2cmd();
    tmpcodesptr = 0;
  }
  // timer conut.
  lTimer += 1;
}

// 调试信息
send any byte and I'll tell you everything I can about it

!(1/9)p4
!(2/9)p5
!(3/9)p6
!(3/9)p6
!(3/9)p6
!(4/9)p3
!(5/9)p2
!(6/9)p1
!(7/9)p7
!(8/9)p9
!(9/9)p8
(p1 = 0);
(p2 = 0);
(p3 = 0);
(p4 = 0);
(p5 = 0);
(p6 = 0);
(p7 = 0);
(p8 = 0);
(p9 = 0);
(3 = 9);
(2 = 8);
(1 = 7);
(6 = 6);
(5 = 5);
(4 = 4);
(9 = 3);
(8 = 2);
(7 = 1);
