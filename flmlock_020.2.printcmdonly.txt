/*
// disable the printTmpcodes(); 6 36 0 5A 88 D4      6 54 0 90 136 212
*/

// 源码

/*
  Source for cloud chess board version ccb_020.1.chessidlong.txt
  Starting form reading the module info correctly.
*/

// disable the printTmpcodes(); 6 36 0 5A 88 D4      6 54 0 90 136 212

/*
  Character analysis operators 
 
 Examples using the character analysis operators.
 Send any byte and the sketch will tell you about it.
 
 created 29 Nov 2010
 modified 2 Apr 2012
 by Tom Igoe
 
 This example code is in the public domain.
 */
long lTimer = 0;
unsigned char tmpcodes[10];
int tmpcodesptr=0;

void printCmd( int pos, int code, long id ) {
  Serial.print( "printCmd(p,c,id);   " );
  Serial.print( pos );
  Serial.print( ", " );
  Serial.print( code );
  Serial.print( ", (" );
  Serial.print( id, HEX );
  Serial.print( ")" );
  Serial.println( id );
}

void command( int pos, int code, long id ) {
  printCmd( pos, code, id );
}

void TmpCodes2cmd() {
  unsigned char b[4];
  b[0] = tmpcodes[2+3];
  b[1] = tmpcodes[2+2];
  b[2] = tmpcodes[2+1];
  b[3] = tmpcodes[2];
  long l = *(long*)(b);
  command( tmpcodes[0], tmpcodes[1], l );
}

void printTmpCodes() {
  if ( tmpcodesptr > 0 )
  for ( int i=0; i<tmpcodesptr; i++ )
  {
    Serial.write( ' ' ); 
    Serial.print(tmpcodes[i]);
  }
}

void printTmpCodesHex() {
  if ( tmpcodesptr > 0 )
  for ( int i=0; i<tmpcodesptr; i++ )
  {
    Serial.write( ' ' ); 
    Serial.print(tmpcodes[i],HEX);
  }
}

void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
  lTimer = 0;
  tmpcodesptr = 0;
  
  // send an intro:
  Serial.println("send any byte and I'll tell you everything I can about it");
  Serial.println();
}

void loop() {
  // get any incoming bytes:
  if (Serial.available() > 0) {
    int thisChar = Serial.read();
    
    // recording the codes.
    if ( tmpcodesptr < 10 )
    {
      tmpcodes[tmpcodesptr] = thisChar;
      tmpcodesptr += 1;
    }
    // reset timer.
    lTimer = 0;
  }
  if ( lTimer > 2000 && tmpcodesptr > 0 )
  { /* print the buffer.
    Serial.print( "printTmpcodes();   " );
    printTmpCodesHex();
    Serial.print( "        " );
    printTmpCodes();
    Serial.println(""); */
    // code 2 command.
    TmpCodes2cmd();
    tmpcodesptr = 0;
  }
  // timer conut.
  lTimer += 1;
}

// 调试信息
send any byte and I'll tell you everything I can about it

printCmd(p,c,id);   1, 0, (0)0
printCmd(p,c,id);   2, 0, (0)0
printCmd(p,c,id);   3, 0, (0)0
printCmd(p,c,id);   4, 0, (0)0
printCmd(p,c,id);   5, 0, (0)0
printCmd(p,c,id);   6, 0, (0)0
printCmd(p,c,id);   7, 0, (0)0
printCmd(p,c,id);   8, 0, (0)0
printCmd(p,c,id);   9, 0, (0)0
printCmd(p,c,id);   1, 54, (56B78B)5683083
printCmd(p,c,id);   2, 54, (56727B)5665403
printCmd(p,c,id);   3, 54, (568A01)5671425
printCmd(p,c,id);   4, 8, (5CC365)6079333
printCmd(p,c,id);   5, 8, (5C5547)6051143
printCmd(p,c,id);   6, 54, (5A88D4)5933268
printCmd(p,c,id);   7, 54, (5663D3)5661651
printCmd(p,c,id);   8, 54, (56EF54)5697364
printCmd(p,c,id);   9, 54, (546F06)5533446
